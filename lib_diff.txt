STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/CoreSupport/core_cm3.c

  inline asm error, making strexb strexh use destination and result for same register - illegal

  --     __ASM volatile ("strexb %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
  ++     __ASM volatile ("strexb %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
  --     __ASM volatile ("strexh %0, %2, [%1]" : "=r" (result) : "r" (addr), "r" (value) );
  ++     __ASM volatile ("strexh %0, %2, [%1]" : "=&r" (result) : "r" (addr), "r" (value) );
  


STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10X/stm32f10x.h

  stdint.h not existing, instead include types.h typedeffing whats needed (uint8_t, etc)

  --   #include <stdint.h>
  ++   #include "types.h"  



STM32F10x_StdPeriph_Lib_V3.5.0/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10X/startup/gcc_ride7/startup_stm32f10x_*.s

  Otherwise Reset_Vector will end up having even address in bootvectors, which will go HardFault
  
        .type  Reset_Handler, %function
  ++    .thumb_func
      Reset_Handler:  

      /* Copy the data segment initializers from flash to SRAM */  
        movs  r1, #0
  

